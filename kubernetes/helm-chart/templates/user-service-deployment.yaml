apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-user-service-deployment
  namespace: {{ .Values.user.namespace }}
  labels:
    app: user-service
spec:
  replicas: {{ .Values.user.replicas }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}-user-service
  strategy:
    rollingUpdate:
      maxSurge: 50%
      maxUnavailable: 50%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-user-service
    spec:
      hostname: {{ .Release.Name }}-user-srv
      containers:
      - name: user-service-container
        image: {{ .Values.user.image }}
        imagePullPolicy: Always
        ports:
        - containerPort: 8092
        envFrom:
          - configMapRef:
              name: user-configmap
        env:
          - name: MONGODB_USER
            valueFrom:
              secretKeyRef:
                name: user-secret
                key: DATABASE_USERNAME
          - name: MONGODB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: user-secret
                key: DATABASE_PASSWORD
        livenessProbe:
          httpGet:
            path: /actuator/health/liveness
            port: 8092
          failureThreshold: 1
          periodSeconds: 5
        readinessProbe:
          httpGet:
            path: /actuator/health/readiness
            port: 8092
          initialDelaySeconds: 40
          periodSeconds: 5
        startupProbe:
          httpGet:
            path: /actuator/health/liveness
            port: 8092
          initialDelaySeconds: 30
          failureThreshold: 1
          periodSeconds: 3
